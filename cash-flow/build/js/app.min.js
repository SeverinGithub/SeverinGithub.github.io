







function drawGraph() {

    var chart = new Chartist.Line('.ct-chart', {
        series: [
        {
            name: 'series-1',
            data: [
            {x: new Date(143134652600), y: 53},
            {x: new Date(143234652600), y: 40},
            {x: new Date(143340052600), y: 45},
            {x: new Date(143366652600), y: 40},
            {x: new Date(143410652600), y: 20},
            {x: new Date(143508652600), y: 32},
            {x: new Date(143569652600), y: 18},
            {x: new Date(143579652600), y: 11}
            ]
        },
        ]
    }, {
        axisX: {
        type: Chartist.FixedScaleAxis,
        divisor: 5,
        labelInterpolationFnc: function(value) {
            return "foo" //moment(value).format('MMM D');
        }
        }
    });    
}

    // Initialize a Line chart in the container with the ID chart1
        
















// -----------------------------------
// MODEL

var cash = 0;
var bank = 0; 

function initModel() {
    cash = 0;
    bank = 0;
}

function addCash(newMoney) {
    console.log("addCash("+newMoney+") adding to cash "+cash);
    cash += newMoney;
}

function addBank(newMoney) {
    console.log("addBank("+newMoney+") adding to bank "+bank);
    bank += newMoney;
}

function getTotal() {
  return cash + bank
}

// -----------------------------------
// VIEW

function redisplay() {
    console.log("redisplay")
    document.getElementById('newBankIncome').value = '';
    document.getElementById('newCashIncome').value = '';
    document.getElementById("mainCashStatus").innerHTML = cash;
    document.getElementById("mainBankStatus").innerHTML = bank;
    document.getElementById("mainTotalStatus").innerHTML = getTotal();

    drawGraph();
}

// -----------------------------------
// CONTROLLER

function initController() {
    cash = parseFloat(localStorage.getItem("cash"))
    if (isNaN(cash))
        cash = 0
    bank = parseFloat(localStorage.getItem("bank"))
    if (isNaN(bank))
        bank = 0
    redisplay()
}

$(document).ready(function() {
    console.log("jquery is ready");
    initModel();
    initController();

    
    $("#liveToastBtnBank").off('click').on('click', function() {
        var str = document.getElementById("newBankIncome").value
        console.log("saved money input" + str);
        var flt = parseFloat(str)
        console.log(" float: " + flt)
        if (isNaN(flt))
            flt = 0;
        addBank(flt)
        localStorage.setItem("bank", bank)
        redisplay()

        const toastBootstrap = bootstrap.Toast.getOrCreateInstance(document.getElementById('liveToastBank'))
        toastBootstrap.show()
    });
    
const toastTrigger2 = document.getElementById('liveToastBtnBank')
const toastLiveExample2 = document.getElementById('liveToastBank')

        if (toastTrigger2) {
          const toastBootstrap = bootstrap.Toast.getOrCreateInstance(toastLiveExample1)
          toastTrigger2.addEventListener('click', () => {
          toastBootstrap.show()
          })
        }

const toastTrigger1 = document.getElementById('liveToastBtnCash')
const toastLiveExample1 = document.getElementById('liveToastCash')

        if (toastTrigger1) {
          const toastBootstrap = bootstrap.Toast.getOrCreateInstance(toastLiveExample1)
          toastTrigger1.addEventListener('click', () => {
          toastBootstrap.show()
          })
        }


   

        $("#liveToastBtnCash").off('click').on('click', function() {
        var str = document.getElementById("newCashIncome").value
        console.log("saved money input" + " " + str);
        var flt = parseFloat(str)
        console.log(" float: " + flt)
        if (isNaN(flt))
            flt = 0;
        addCash(flt)
        localStorage.setItem("cash", cash)
        redisplay()
    }); 


     $("#factoryResetBtn").off('click').on('click', function() {
         console.log("factoryResetBtn Pressed")
         cash = 0;
         localStorage.setItem("cash", 0)
         bank = 0;
         localStorage.setItem("bank", 0)
         redisplay()
     });
});


